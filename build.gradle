import groovy.json.JsonSlurper

buildscript {
    ext {
        springBootVersion = '1.5.2.RELEASE'
    }
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('com.bmuschko:gradle-docker-plugin:3.2.6')
        classpath("com.avast.gradle:gradle-docker-compose-plugin:0.7.1")
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'jacoco'
apply plugin: 'application'
apply plugin: 'com.bmuschko.docker-remote-api'
apply plugin: 'docker-compose'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    jcenter()
    mavenCentral()
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-web:1.5.6.RELEASE')
    compile('org.springframework.boot:spring-boot-starter-data-jpa:1.5.6.RELEASE')
    compile('org.springframework.boot:spring-boot-starter-security:1.5.6.RELEASE')
    compile('org.springframework.boot:spring-boot-devtools:1.5.6.RELEASE')
    compile "org.flywaydb:flyway-core:5.0.7"
    compile('io.jsonwebtoken:jjwt:0.7.0')
    compile('org.projectlombok:lombok:1.16.12')
    compile('com.virgilsecurity.sdk:crypto:5.0.0')
    compile('com.virgilsecurity.sdk:sdk:5.0.0')
    compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.7.0'
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.7.0'

    runtime('org.postgresql:postgresql:42.1.1')

    testCompile('org.springframework.boot:spring-boot-starter-test:1.5.2.RELEASE')
    testCompile("junit:junit:4.12")

    testRuntime('com.h2database:h2:1.4.193')
}

jar {
    baseName = 'admin-backend'
}

jacoco {
    toolVersion = "0.7.6.201602180812"
}

jacocoTestReport {
    reports {
        xml.enabled = false
        csv.enabled = false
        html.enabled = true
    }
}

import com.bmuschko.gradle.docker.tasks.image.Dockerfile
import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage
import com.bmuschko.gradle.docker.tasks.image.DockerPushImage

task createDockerfile(type: Dockerfile) {
    dependsOn build
    destFile = project.file('./Dockerfile')
    from 'openjdk:8-jdk-alpine'
    volume "/tmp"
    addFile "build/libs/${jar.baseName}.jar", 'app.jar'
    entryPoint "java\",\"-Djava.security.egd=file:/dev/./urandom\",\"-jar\",\"/app.jar"
}

task dockerBuildImage(type: DockerBuildImage) {
    dependsOn createDockerfile
    inputDir = createDockerfile.destFile.parentFile
    tag = "eltesoftwaretechnology/${jar.baseName}:${jar.version}"
}

task dockerPushImage(type: DockerPushImage) {
    dependsOn dockerBuildImage
    imageName "eltesoftwaretechnology/${jar.baseName}"
}

docker {
    registryCredentials {
        username = System.getProperty('DOCKER_HUB_USERNAME')
        password = System.getProperty('DOCKER_HUB_PASSWORD')
    }
}

dockerCompose {
    buildBeforeUp = true
    captureContainersOutput = true
}

composeBuild.dependsOn "createDockerfile"
composeUp.dependsOn "createDockerfile"

test.finalizedBy jacocoTestReport
