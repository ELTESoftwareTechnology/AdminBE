import groovy.json.JsonSlurper

buildscript {
  ext {
    springBootVersion = '1.5.2.RELEASE'
  }
  repositories {
      jcenter()
      mavenCentral()
  }
  dependencies {
      classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
      classpath('com.bmuschko:gradle-docker-plugin:3.2.6')
      classpath("com.avast.gradle:gradle-docker-compose-plugin:0.7.1")
  }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'jacoco'
apply plugin: 'application'
apply plugin: 'com.bmuschko.docker-java-application'
apply plugin: 'docker-compose'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
  jcenter()
  mavenCentral()
}

dependencies {
  compile('org.springframework.boot:spring-boot-starter-web:1.5.2.RELEASE')
  compile('org.springframework.boot:spring-boot-starter-data-jpa:1.5.2.RELEASE')
  compile('org.springframework.boot:spring-boot-starter-security:1.5.2.RELEASE')
  compile('org.springframework.boot:spring-boot-devtools:1.5.2.RELEASE')
  compile('io.jsonwebtoken:jjwt:0.7.0')
  compile('org.projectlombok:lombok:1.16.12')

  runtime('org.postgresql:postgresql:42.1.1')

  testCompile('org.springframework.boot:spring-boot-starter-test:1.5.2.RELEASE')
  testCompile("junit:junit:4.12")

  testRuntime('com.h2database:h2:1.4.193')
}

jar {
  baseName='admin-backend'
  version='0.0.2'
}

jacoco {
  toolVersion = "0.7.6.201602180812"
}

jacocoTestReport {
  reports {
    xml.enabled = false
    csv.enabled = false
    html.enabled = true
  }
}


docker {
    javaApplication {
        tag = "eltesoftwaretechnology/${jar.baseName}:${jar.version}"
        baseImage = 'openjdk:8-jdk-alpine'
        ports = []
    }
    registryCredentials {
        def jsonFile = file('credentials.json')
        def parsedJson = new JsonSlurper().parseText(jsonFile.text)

        username = parsedJson.username
        password = parsedJson.password
    }
}

dockerCompose {
    buildBeforeUp = true
}

test.finalizedBy jacocoTestReport
